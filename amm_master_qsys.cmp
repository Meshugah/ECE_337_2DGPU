	component amm_master_qsys is
		port (
			clk_clk                                           : in    std_logic                     := 'X';             -- clk
			reset_reset_n                                     : in    std_logic                     := 'X';             -- reset_n
			new_sdram_controller_0_wire_addr                  : out   std_logic_vector(11 downto 0);                    -- addr
			new_sdram_controller_0_wire_ba                    : out   std_logic_vector(1 downto 0);                     -- ba
			new_sdram_controller_0_wire_cas_n                 : out   std_logic;                                        -- cas_n
			new_sdram_controller_0_wire_cke                   : out   std_logic;                                        -- cke
			new_sdram_controller_0_wire_cs_n                  : out   std_logic;                                        -- cs_n
			new_sdram_controller_0_wire_dq                    : inout std_logic_vector(31 downto 0) := (others => 'X'); -- dq
			new_sdram_controller_0_wire_dqm                   : out   std_logic_vector(3 downto 0);                     -- dqm
			new_sdram_controller_0_wire_ras_n                 : out   std_logic;                                        -- ras_n
			new_sdram_controller_0_wire_we_n                  : out   std_logic;                                        -- we_n
			write_master_control_fixed_location               : in    std_logic                     := 'X';             -- fixed_location
			write_master_control_write_base                   : in    std_logic_vector(26 downto 0) := (others => 'X'); -- write_base
			write_master_control_write_length                 : in    std_logic_vector(26 downto 0) := (others => 'X'); -- write_length
			write_master_control_go                           : in    std_logic                     := 'X';             -- go
			write_master_control_done                         : out   std_logic;                                        -- done
			write_master_user_write_buffer                    : in    std_logic                     := 'X';             -- write_buffer
			write_master_user_buffer_input_data               : in    std_logic_vector(31 downto 0) := (others => 'X'); -- buffer_input_data
			write_master_user_buffer_full                     : out   std_logic;                                        -- buffer_full
			read_master_control_fixed_location                : in    std_logic                     := 'X';             -- fixed_location
			read_master_control_read_base                     : in    std_logic_vector(26 downto 0) := (others => 'X'); -- read_base
			read_master_control_read_length                   : in    std_logic_vector(26 downto 0) := (others => 'X'); -- read_length
			read_master_control_go                            : in    std_logic                     := 'X';             -- go
			read_master_control_done                          : out   std_logic;                                        -- done
			read_master_control_early_done                    : out   std_logic;                                        -- early_done
			read_master_user_read_buffer                      : in    std_logic                     := 'X';             -- read_buffer
			read_master_user_buffer_output_data               : out   std_logic_vector(31 downto 0);                    -- buffer_output_data
			read_master_user_data_available                   : out   std_logic;                                        -- data_available
			pcie_hard_ip_0_refclk_export                      : in    std_logic                     := 'X';             -- export
			pcie_hard_ip_0_test_in_test_in                    : in    std_logic_vector(39 downto 0) := (others => 'X'); -- test_in
			pcie_hard_ip_0_pcie_rstn_export                   : in    std_logic                     := 'X';             -- export
			pcie_hard_ip_0_clocks_sim_clk250_export           : out   std_logic;                                        -- clk250_export
			pcie_hard_ip_0_clocks_sim_clk500_export           : out   std_logic;                                        -- clk500_export
			pcie_hard_ip_0_clocks_sim_clk125_export           : out   std_logic;                                        -- clk125_export
			pcie_hard_ip_0_reconfig_busy_busy_altgxb_reconfig : in    std_logic                     := 'X';             -- busy_altgxb_reconfig
			pcie_hard_ip_0_pipe_ext_pipe_mode                 : in    std_logic                     := 'X';             -- pipe_mode
			pcie_hard_ip_0_pipe_ext_phystatus_ext             : in    std_logic                     := 'X';             -- phystatus_ext
			pcie_hard_ip_0_pipe_ext_rate_ext                  : out   std_logic;                                        -- rate_ext
			pcie_hard_ip_0_pipe_ext_powerdown_ext             : out   std_logic_vector(1 downto 0);                     -- powerdown_ext
			pcie_hard_ip_0_pipe_ext_txdetectrx_ext            : out   std_logic;                                        -- txdetectrx_ext
			pcie_hard_ip_0_pipe_ext_rxelecidle0_ext           : in    std_logic                     := 'X';             -- rxelecidle0_ext
			pcie_hard_ip_0_pipe_ext_rxdata0_ext               : in    std_logic_vector(7 downto 0)  := (others => 'X'); -- rxdata0_ext
			pcie_hard_ip_0_pipe_ext_rxstatus0_ext             : in    std_logic_vector(2 downto 0)  := (others => 'X'); -- rxstatus0_ext
			pcie_hard_ip_0_pipe_ext_rxvalid0_ext              : in    std_logic                     := 'X';             -- rxvalid0_ext
			pcie_hard_ip_0_pipe_ext_rxdatak0_ext              : in    std_logic                     := 'X';             -- rxdatak0_ext
			pcie_hard_ip_0_pipe_ext_txdata0_ext               : out   std_logic_vector(7 downto 0);                     -- txdata0_ext
			pcie_hard_ip_0_pipe_ext_txdatak0_ext              : out   std_logic;                                        -- txdatak0_ext
			pcie_hard_ip_0_pipe_ext_rxpolarity0_ext           : out   std_logic;                                        -- rxpolarity0_ext
			pcie_hard_ip_0_pipe_ext_txcompl0_ext              : out   std_logic;                                        -- txcompl0_ext
			pcie_hard_ip_0_pipe_ext_txelecidle0_ext           : out   std_logic;                                        -- txelecidle0_ext
			pcie_hard_ip_0_powerdown_pll_powerdown            : in    std_logic                     := 'X';             -- pll_powerdown
			pcie_hard_ip_0_powerdown_gxb_powerdown            : in    std_logic                     := 'X';             -- gxb_powerdown
			pcie_hard_ip_0_rx_in_rx_datain_0                  : in    std_logic                     := 'X';             -- rx_datain_0
			pcie_hard_ip_0_tx_out_tx_dataout_0                : out   std_logic;                                        -- tx_dataout_0
			pcie_hard_ip_0_reconfig_togxb_data                : in    std_logic_vector(3 downto 0)  := (others => 'X'); -- data
			pcie_hard_ip_0_reconfig_fromgxb_0_data            : out   std_logic_vector(4 downto 0);                     -- data
			pcie_hard_ip_0_test_out_test_out                  : out   std_logic_vector(8 downto 0)                      -- test_out
		);
	end component amm_master_qsys;

